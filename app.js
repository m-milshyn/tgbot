const TelegramBot = require('node-telegram-bot-api');
const { translate } = require('google-translate-api-browser');
const { v4: uuidv4 } = require('uuid');
const fs = require('fs');
const path = './data.json';

const bot = new TelegramBot(process.env.BOT_TOKEN, { polling: true });

function saveData(key, data) {
    let jsonData = {};
    if (fs.existsSync(path)) {
        jsonData = JSON.parse(fs.readFileSync(path));
    }
    jsonData[key] = data;
    fs.writeFileSync(path, JSON.stringify(jsonData, null, 2));
}

function loadData(key) {
    if (fs.existsSync(path)) {
        const jsonData = JSON.parse(fs.readFileSync(path));
        return jsonData[key] || {};
    }
    return {};
}

let userInfo = loadData('userInfo');
let expertHelpInfo = loadData('expertHelpInfo');
let userStates = loadData('userStates');
let questionnaireAnswer = loadData('questionnaireAnswer');
let defaultLanguage = "ru";

for (let chatId in userInfo) {
    restoreUserState(bot, userInfo, chatId);
}

bot.onText(/\/start/, async (msg) => {
    userInfo = loadData('userInfo');
    expertHelpInfo = loadData('expertHelpInfo');
    userStates = loadData('userStates');
    questionnaireAnswer = loadData('questionnaireAnswer');
    console.log(userInfo);
    userLanguage = getUserLanguage(msg);
    console.log(userLanguage);
    userInfo[msg.chat.id] = {
        language: userLanguage,
        state: 'start',
        lastMessageId: msg.message_id
    };

    saveData('userInfo', userInfo);
    if (userInfo[msg.chat.id] && userInfo[msg.chat.id].language) {
        userLanguage = defaultLanguage;
    } else {
        userLanguage = userInfo[msg.chat.id].language;
    }

    saveData('userInfo', userInfo);

    const opts = {
        reply_markup: {
            inline_keyboard: [
                [
                    {
                        text: await translateText("–ê–Ω–∫–µ—Ç–∞", userLanguage), callback_data: "questionnaire"
                    }
                ],
                [
                    {
                        text: await translateText("–≠–∫—Å–ø–µ—Ä—Ç–Ω–∞—è –ø–æ–º–æ—â—å —Å –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å—é", userLanguage), callback_data: "expert_help"
                    }
                ],
                [
                    {
                        text: await translateText("–û –Ω–∞—Å", userLanguage), url: 'https://t.me'
                    }
                ],
                [
                    {
                        text: await translateText("–°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è", userLanguage), callback_data: "strategies"
                    }
                ]
            ]
        }
    };

    await bot.sendMessage(msg.chat.id, await translateText(
        "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Å –≤ –ê–ù ‚ÄúCondor Real Estates‚Äù!\n\n" +
        "–ú—ã —Ä–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å –≤ –Ω–∞—à–µ–º Telegram-–±–æ—Ç–µ! –ù–∞—à–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –Ω–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –Ω–∞ –ë–∞–ª–∏, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—è –≤–∞–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –≤—ã–≥–æ–¥–Ω—ã—Ö –≤–ª–æ–∂–µ–Ω–∏–π –≤ –æ–¥–∏–Ω –∏–∑ —Å–∞–º—ã—Ö –∂–∏–≤–æ–ø–∏—Å–Ω—ã—Ö —É–≥–æ–ª–∫–æ–≤ –º–∏—Ä–∞.\n\n" +
        "–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —à–∏—Ä–æ–∫–∏–π —Å–ø–µ–∫—Ç—Ä —É—Å–ª—É–≥, –≤–∫–ª—é—á–∞—è –ø–æ–∫—É–ø–∫—É, –ø—Ä–æ–¥–∞–∂—É –∏ –∞—Ä–µ–Ω–¥—É –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏, –∞ —Ç–∞–∫–∂–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è–º –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –æ–±—ä–µ–∫—Ç–∞–º–∏. –ù–∞—à–∏ —ç–∫—Å–ø–µ—Ä—Ç—ã –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å –≤–∞–º –Ω–∞–π—Ç–∏ –Ω–∞–∏–ª—É—á—à–∏–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –≤–∞—à–∏—Ö —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ü–µ–ª–µ–π.\n\n" +
        "–° —á–µ–≥–æ –≤–∞–º –Ω–∞—á–∞—Ç—å ‚ÅâÔ∏è\n" +
        "‚û°Ô∏è–ü—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å, —á—Ç–æ–±—ã –º—ã —Å–º–æ–≥–ª–∏ –ø–æ–¥–æ–±—Ä–∞—Ç—å –≤–∞–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –ø–æ–¥ –≤–∞—à –∑–∞–ø—Ä–æ—Å –∏ –≤—ã –Ω–∞–≥–ª—è–¥–Ω–æ —É–≤–∏–¥–µ–ª–∏, —á—Ç–æ –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –Ω–∞ –≤–∞—à –±—é–¥–∂–µ—Ç.\n‚û°Ô∏è–°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–∞—à–∏–º–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏, –ø–æ–ª—É—á–∞–π—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–æ–≤—ã—Ö –æ–±—ä–µ–∫—Ç–∞—Ö –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö, –∞ —Ç–∞–∫–∂–µ –∑–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã ‚Äî –º—ã –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏ –∏ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å!\n\n" +
        "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—Å. –î–∞–≤–∞–π—Ç–µ –≤–º–µ—Å—Ç–µ —Å–æ–∑–¥–∞–¥–∏–º –í–∞—à–µ —É—Å–ø–µ—à–Ω–æ–µ –±—É–¥—É—â–µ–µ –Ω–∞ –ë–∞–ª–∏!\n\n" +
        "‚¨áÔ∏è–°–¥–µ–ª–∞–π—Ç–µ —Å–≤–æ–π –≤—ã–±–æ—Ä‚¨áÔ∏è",
        userLanguage
    ), opts);
});

async function startExpertHelp(msg) {
    const chatId = msg.chat.id;
    const userLanguage = (userInfo[chatId] && userInfo[chatId].language) ? userInfo[chatId].language : defaultLanguage;

    const processId = uuidv4();
    userStates[chatId] = { step: 'awaitingEmail', processId };
    userInfo[chatId].state = 'awaiting_email';
    userInfo[chatId].lastMessageId = msg.message_id;
    saveData('userStates', userStates);
    if (userStates[chatId] && userStates[chatId].handler) {
        bot.removeListener('message', userStates[chatId].handler);
    }

    const handleMessage = async (msg) => {
        if (msg.chat.id === chatId) {
            if (userStates[chatId] && userStates[chatId].processId === processId) {
                switch (userStates[chatId].step) {
                    case 'awaitingEmail':
                        await handleEmail(msg);
                        break;
                    case 'awaitingPhone':
                        await handlePhone(msg);
                        break;
                    case 'awaitingFIO':
                        await handleFIO(msg);
                        break;
                }
            }
        }
    };

    userStates[chatId].handler = handleMessage;
    saveData('userStates', userStates);
    bot.on('message', handleMessage);

    await bot.sendMessage(chatId, await translateText('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤–∞—à –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã:', userLanguage));
};

async function handleEmail(msg) {
    const chatId = msg.chat.id;
    const userLanguage = (userInfo[chatId] && userInfo[chatId].language) ? userInfo[chatId].language : defaultLanguage;
    const emailRegex = /^[a-zA-Z0-9._-]{1,}@[a-z]+\.[a-z]+$/;

    if (!emailRegex.test(msg.text)) {
        await bot.sendMessage(chatId, await translateText('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã:', userLanguage));
    } else {
        expertHelpInfo[chatId] = { description: "–≠–∫—Å–ø–µ—Ä—Ç–Ω–∞—è –ø–æ–º–æ—â—å —Å –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å—é", email: msg.text, phone: "", fio: "" };
        userStates[chatId].step = 'awaitingPhone';
        userInfo[chatId].state = 'awaiting_phone';
        saveData('expertHelpInfo', expertHelpInfo);
        saveData('userStates', userStates);
        await bot.sendMessage(chatId, await translateText('–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –Ω–∞—á–∏–Ω–∞—è —Å —Å–∏–º–≤–æ–ª–∞ "+" –∏ –∫–æ–¥–∞ —Å—Ç—Ä–∞–Ω—ã.', userLanguage));
    }
};

async function handlePhone(msg) {
    const chatId = msg.chat.id;
    const userLanguage = (userInfo[chatId] && userInfo[chatId].language) ? userInfo[chatId].language : defaultLanguage;
    const phoneRegex = /^\+\d{6,16}$/;

    if (!phoneRegex.test(msg.text)) {
        await bot.sendMessage(chatId, await translateText('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –Ω–∞—á–∏–Ω–∞—è —Å "+" –∏ —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã.', userLanguage));
    } else {
        expertHelpInfo[chatId].phone = msg.text;
        userInfo[chatId].state = 'awaiting_fio';
        userStates[chatId].step = 'awaitingFIO';
        saveData('expertHelpInfo', expertHelpInfo);
        saveData('userStates', userStates);
        await bot.sendMessage(chatId, await translateText('–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞—à–µ–º –Ω–æ–º–µ—Ä–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞! –¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –∏–º—è, —Ñ–∞–º–∏–ª–∏—é –∏ –æ—Ç—á–µ—Å—Ç–≤–æ.', userLanguage));
    }
};

async function handleFIO(msg) {
    const chatId = msg.chat.id;
    const userLanguage = (userInfo[chatId] && userInfo[chatId].language) ? userInfo[chatId].language : defaultLanguage;

    expertHelpInfo[chatId].fio = msg.text;
    const opts = {
        reply_markup: {
            inline_keyboard: [
                [{ text: await translateText("–°—Ç—Ä–∞—Ç–µ–≥–∏—è –∞—Ä–µ–Ω–¥—ã", userLanguage), callback_data: "rental_strategy" }],
                [{ text: await translateText("–°—Ç—Ä–∞—Ç–µ–≥–∏—è –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–∂–∏", userLanguage), callback_data: "resale_strategy" }],
                [{ text: await translateText("–ê—Ä–µ–Ω–¥–∞ —Å –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–∂–µ–π", userLanguage), callback_data: "lease_strategy" }],
                [{ text: await translateText("–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", userLanguage), callback_data: "help_again" }]
            ]
        }
    };

    await bot.sendMessage(chatId, await translateText('–ù–∞—à–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç—ã —Å–≤—è–∂—É—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è, —á—Ç–æ–±—ã –æ–±—Å—É–¥–∏—Ç—å –≤–∞—à–∏ —Ü–µ–ª–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π.\n\n –ü–æ–∫–∞ –í—ã –∂–¥–µ—Ç–µ –æ—Ç–≤–µ—Ç–∞ –Ω–∞—à–∏—Ö –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–æ–≤, –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥—Ä—É–≥—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –Ω–∞—à–µ–º –±–æ—Ç–µ‚¨áÔ∏è', userLanguage), opts);

    await bot.sendMessage(process.env.MANAGER_GROUP,
        `üí° –¢–µ–º–∞: ${expertHelpInfo[chatId].description}\nüìß –ê–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã: ${expertHelpInfo[chatId].email}\nüì± –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ${expertHelpInfo[chatId].phone}\nüë®üèª‚Äçüíª –§–ò–û: ${expertHelpInfo[chatId].fio}`);

    delete userStates[chatId];
    delete expertHelpInfo[chatId];
    saveData('expertHelpInfo', expertHelpInfo);
    saveData('userStates', userStates);
};


async function investmentStrategies(msg) {
    userInfo[msg.chat.id].state = 'investment_strategies_start';
    userInfo[msg.chat.id].lastMessageId = msg.message_id;
    saveData('userStates', userStates);
    let userLanguage;
    if (userInfo[msg.chat.id] && userInfo[msg.chat.id].language) {
        userLanguage = defaultLanguage;
    } else {
        userLanguage = userInfo[msg.chat.id].language;
    }
    const opts = {
        parse_mode: 'Markdown',
        reply_markup: {
            inline_keyboard: [
                [
                    {
                        text: await translateText("–°—Ç—Ä–∞—Ç–µ–≥–∏—è –∞—Ä–µ–Ω–¥—ã", userLanguage), callback_data: "rental_strategy"
                    }
                ],
                [
                    {
                        text: await translateText("–°—Ç—Ä–∞—Ç–µ–≥–∏—è –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–∂–∏", userLanguage), callback_data: "resale_strategy"
                    }
                ],
                [
                    {
                        text: await translateText("–ê—Ä–µ–Ω–¥–∞ —Å –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–∂–µ–π", userLanguage), callback_data: "lease_strategy"
                    }
                ]
            ]
        }
    };
    await bot.sendMessage(msg.chat.id, await translateText(
        '–°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –Ω–∞ –ë–∞–ª–∏\n\n' +
        '1. –°—Ç—Ä–∞—Ç–µ–≥–∏—è –∞—Ä–µ–Ω–¥—ã\n' +
        '2. –°—Ç—Ä–∞—Ç–µ–≥–∏—è –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–∂–∏\n' +
        '3. –ê—Ä–µ–Ω–¥–∞ —Å –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–∂–µ–π\n\n' +
        '‚¨áÔ∏è–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –∫–∞–∂–¥–æ–π –∏–∑ —ç—Ç–∏—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –Ω–∏–∂–µ‚¨áÔ∏è',
        userLanguage), opts);
}

async function questionnaireForm(msg) {
    try {
        const chatId = msg.chat.id;
        userInfo[chatId].state = 'questionnaire';
        userInfo[chatId].lastMessageId = msg.message_id;
        saveData('userInfo', userInfo);

        userInfo = loadData('userInfo');
        expertHelpInfo = loadData('expertHelpInfo');
        userStates = loadData('userStates');
        questionnaireAnswer = loadData('questionnaireAnswer');

        let userLanguage;
        if (userInfo[chatId] && userInfo[chatId].language) {
            userLanguage = userInfo[chatId].language;
        } else {
            userLanguage = defaultLanguage;
        }

        const questions = [
            {
                text: await translateText("–ö–∞–∫–æ–≤–∞ –æ—Å–Ω–æ–≤–Ω–∞—è —Ü–µ–ª—å –≤–∞—à–µ–π –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –≤ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –Ω–∞ –ë–∞–ª–∏?", userLanguage),
                options: [
                    await translateText("–î–ª—è –ª–∏—á–Ω–æ–≥–æ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è", userLanguage),
                    await translateText("–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Ö–æ–¥–∞ –æ—Ç –∞—Ä–µ–Ω–¥—ã", userLanguage),
                    await translateText("–î–ª—è –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–∂–∏ —Å –ø—Ä–∏–±—ã–ª—å—é", userLanguage),
                    await translateText("–î—Ä—É–≥–æ–µ (–ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Ç–æ—á–Ω–∏—Ç–µ)", userLanguage)
                ],
                customOptionIndex: 3
            },
            {
                text: await translateText("–ö–∞–∫–∏–º —Ç–∏–ø–æ–º –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –≤—ã –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç–µ—Å—å?", userLanguage),
                options: [
                    await translateText("–ê–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã", userLanguage),
                    await translateText("–í–∏–ª–ª–∞", userLanguage),
                    await translateText("–ó–µ–º–µ–ª—å–Ω—ã–π —É—á–∞—Å—Ç–æ–∫", userLanguage),
                    await translateText("–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å", userLanguage),
                    await translateText("–î—Ä—É–≥–æ–µ (–ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Ç–æ—á–Ω–∏—Ç–µ)", userLanguage)
                ],
                customOptionIndex: 4
            },
            {
                text: await translateText("–ö–∞–∫–æ–≤ –≤–∞—à –±—é–¥–∂–µ—Ç –Ω–∞ –ø–æ–∫—É–ø–∫—É –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏?", userLanguage),
                options: [
                    await translateText("–î–æ $100,000", userLanguage),
                    await translateText("$100,000 - $300,000", userLanguage),
                    await translateText("$300,000 - $500,000", userLanguage),
                    await translateText("$500,000 - $1,000,000", userLanguage),
                    await translateText("–ë–æ–ª–µ–µ $1,000,000", userLanguage)
                ]
            },
            {
                text: await translateText("–í –∫–∞–∫–æ–º —Ä–∞–π–æ–Ω–µ –ë–∞–ª–∏ –≤—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å?", userLanguage),
                options: [
                    await translateText("–ö—É—Ç–∞", userLanguage),
                    await translateText("–°–µ–º–∏–Ω—å—è–∫", userLanguage),
                    await translateText("–ß–∞–Ω–≥—É", userLanguage),
                    await translateText("–£–±—É–¥", userLanguage),
                    await translateText("–î–∂–∏–º–±–∞—Ä–∞–Ω", userLanguage),
                    await translateText("–î—Ä—É–≥–∏–µ —Ä–∞–π–æ–Ω—ã (–ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Ç–æ—á–Ω–∏—Ç–µ)", userLanguage)
                ],
                customOptionIndex: 5
            },
            {
                text: await translateText("–ö–∞–∫—É—é –æ–∂–∏–¥–∞–µ–º—É—é –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –∏–ª–∏ –≤—ã–≥–æ–¥—É –≤—ã –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π –≤ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –Ω–∞ –ë–∞–ª–∏?", userLanguage),
                options: [
                    await translateText("–î–æ 5% –≥–æ–¥–æ–≤—ã—Ö", userLanguage),
                    await translateText("5-10% –≥–æ–¥–æ–≤—ã—Ö", userLanguage),
                    await translateText("10-15% –≥–æ–¥–æ–≤—ã—Ö", userLanguage),
                    await translateText("–ë–æ–ª–µ–µ 15% –≥–æ–¥–æ–≤—ã—Ö", userLanguage),
                    await translateText("–¢—Ä—É–¥–Ω–æ —Å–∫–∞–∑–∞—Ç—å, —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—é –Ω–∞ –≤–∞—à—É –ø–æ–º–æ—â—å –≤ –æ—Ü–µ–Ω–∫–µ", userLanguage)
                ]
            },
            {
                text: await translateText("–ö–æ–≥–¥–∞ –≤—ã –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ —Å–æ–≤–µ—Ä—à–∏—Ç—å –ø–æ–∫—É–ø–∫—É –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏?", userLanguage),
                options: [
                    await translateText("–í —Ç–µ—á–µ–Ω–∏–µ –±–ª–∏–∂–∞–π—à–∏—Ö 3 –º–µ—Å—è—Ü–µ–≤", userLanguage),
                    await translateText("–í —Ç–µ—á–µ–Ω–∏–µ 6 –º–µ—Å—è—Ü–µ–≤", userLanguage),
                    await translateText("–í —Ç–µ—á–µ–Ω–∏–µ –≥–æ–¥–∞", userLanguage),
                    await translateText("–ë–æ–ª–µ–µ –≥–æ–¥–∞", userLanguage)
                ]
            },
            {
                text: await translateText("–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –∫–∞–∫–∏–µ-–ª–∏–±–æ –æ—Å–æ–±—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∏–ª–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –∫ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏, –∫–æ—Ç–æ—Ä—É—é –≤—ã –∏—â–µ—Ç–µ?", userLanguage),
                options: [
                    await translateText("–î–∞ (–ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Ç–æ—á–Ω–∏—Ç–µ)", userLanguage),
                    await translateText("–ù–µ—Ç", userLanguage)
                ],
                customOptionIndex: 0
            },
            {
                text: await translateText("–ú–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã?", userLanguage),
                options: [
                    await translateText("–ë–∞–Ω–∫–æ–≤—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥", userLanguage),
                    await translateText("–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞", userLanguage),
                    await translateText("–û–ø–ª–∞—Ç–∞ –Ω–∞–ª–∏—á–Ω—ã–º–∏", userLanguage)
                ]
            },
            {
                text: await translateText("–ö–∞–∫ –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –æ–ø–ª–∞—Ç—É?", userLanguage),
                options: [
                    await translateText("–†–∞—Å—Å—Ä–æ—á–∫–∞", userLanguage),
                    await translateText("–ü–æ–ª–Ω–∞—è —Å—É–º–º–∞", userLanguage)
                ]
            },
            {
                text: await translateText("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –ø–æ–ª–Ω–æ–µ –§–ò–û:", userLanguage),
                options: []
            },
            {
                text: await translateText("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω:", userLanguage),
                options: []
            }
        ];

        if (!userStates[chatId]) {
            userStates[chatId] = { currentQuestionIndex: 0, waitingForDetail: false };
            saveData('userStates', userStates);
        }
        if (!questionnaireAnswer[chatId]) {
            questionnaireAnswer[chatId] = {};
            saveData('questionnaireAnswer', questionnaireAnswer);
        }

        const state = userStates[chatId];

        const sendQuestion = async () => {
            const currentQuestion = questions[state.currentQuestionIndex];
            const opts = currentQuestion.options.length ? {
                reply_markup: {
                    keyboard: currentQuestion.options.map(option => [option]),
                    one_time_keyboard: true,
                    resize_keyboard: true
                }
            } : { reply_markup: { remove_keyboard: true } };
            await bot.sendMessage(chatId, currentQuestion.text, opts);
        };

        const handleAnswer = async (msg) => {
            const text = msg.text;
            const currentQuestion = questions[state.currentQuestionIndex];

            if (state.waitingForDetail) {
                questionnaireAnswer[chatId][`question${state.currentQuestionIndex + 1}`] += `: ${text}`;
                state.currentQuestionIndex++;
                state.waitingForDetail = false;
                saveData('questionnaireAnswer', questionnaireAnswer);
                saveData('userStates', userStates);

                if (state.currentQuestionIndex < questions.length) {
                    await sendQuestion();
                } else {
                    await handleEndOfQuestionnaire();
                }
            } else if (currentQuestion.customOptionIndex !== undefined && text === currentQuestion.options[currentQuestion.customOptionIndex]) {
                questionnaireAnswer[chatId][`question${state.currentQuestionIndex + 1}`] = text;
                state.waitingForDetail = true;
                saveData('questionnaireAnswer', questionnaireAnswer);

                await bot.sendMessage(
                    chatId,
                    await translateText("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –≤–∞—à–∏ –æ—Å–æ–±—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏.", userLanguage),
                    { reply_markup: { remove_keyboard: true } }
                );
            } else {
                questionnaireAnswer[chatId][`question${state.currentQuestionIndex + 1}`] = text;
                state.currentQuestionIndex++;
                saveData('questionnaireAnswer', questionnaireAnswer);
                saveData('userStates', userStates);

                if (state.currentQuestionIndex < questions.length) {
                    await sendQuestion();
                } else {
                    await handleEndOfQuestionnaire();
                }
            }
        };

        const handleEndOfQuestionnaire = async () => {
            const answers = questionnaireAnswer[chatId];
            const finalMessage = `<b>üìù –ê–Ω–∫–µ—Ç–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞</b>\n\n` +
                `<b>1. –¶–µ–ª—å –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏:</b> ${answers.question1}\n` +
                `<b>2. –¢–∏–ø –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏:</b> ${answers.question2}\n` +
                `<b>3. –ë—é–¥–∂–µ—Ç:</b> ${answers.question3}\n` +
                `<b>4. –ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–π —Ä–∞–π–æ–Ω:</b> ${answers.question4}\n` +
                `<b>5. –û–∂–∏–¥–∞–µ–º–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å:</b> ${answers.question5}\n` +
                `<b>6. –í—Ä–µ–º—è –ø–æ–∫—É–ø–∫–∏:</b> ${answers.question6}\n` +
                `<b>7. –û—Å–æ–±—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è:</b> ${answers.question7}\n` +
                `<b>8. –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:</b> ${answers.question8}\n` +
                `<b>9. –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ –≤ –æ–ø–ª–∞—Ç–µ:</b> ${answers.question9}\n` +
                `<b>–ü–æ–ª–Ω–æ–µ –§–ò–û:</b> ${questionnaireAnswer[chatId].question10}\n` +
                `<b>–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω:</b> ${questionnaireAnswer[chatId].question11}`;

            await bot.sendMessage(process.env.MANAGER_GROUP, finalMessage, { parse_mode: 'HTML' });

            await bot.sendMessage(chatId, await translateText("–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã. –ú—ã —Å–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ–º—Å—è.\n\n –ß—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –¥–æ—Ö–æ–¥–∞ –∏–ª–∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å—Ç–∞—Ä—Ç–æ–≤–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ", userLanguage), {
                reply_markup: {
                    inline_keyboard: [
                        [{ text: await translateText("–°—Ç—Ä–∞—Ç–µ–≥–∏—è –∞—Ä–µ–Ω–¥—ã", userLanguage), callback_data: "rental_strategy" }],
                        [{ text: await translateText("–°—Ç—Ä–∞—Ç–µ–≥–∏—è –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–∂–∏", userLanguage), callback_data: "resale_strategy" }],
                        [{ text: await translateText("–ê—Ä–µ–Ω–¥–∞ —Å –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–∂–µ–π", userLanguage), callback_data: "lease_strategy" }],
                        [{ text: await translateText("–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", userLanguage), callback_data: "help_again" }]
                    ]
                }
            });

            delete questionnaireAnswer[chatId];
            delete userStates[chatId];
            saveData('questionnaireAnswer', questionnaireAnswer);
            saveData('userStates', userStates);

            bot.removeListener('message', handleAnswer);
        };

        bot.removeListener('message', handleAnswer);
        bot.on('message', (msg) => {
            if (msg.chat.id === chatId) handleAnswer(msg);
        });

        await sendQuestion();

    } catch (error) {
        console.log("USER INFO - " + JSON.stringify(userInfo[msg.chat.id]));
        console.log("FORM ERROR MESSAGE - " + error);
    }
}


bot.on('callback_query', async (callbackQuery) => {
    try {
        const msg = callbackQuery.message;
        const chatId = msg.chat.id;
        const messageId = msg.message_id;
        const data = callbackQuery.data;

        userInfo = loadData('userInfo');
        expertHelpInfo = loadData('expertHelpInfo');
        userStates = loadData('userStates');
        questionnaireAnswer = loadData('questionnaireAnswer');

        let userLanguage;
        try {
            if (!userInfo[chatId] || !userInfo[chatId].language) {
                userLanguage = defaultLanguage;
            } else {
                userLanguage = userInfo[chatId].language;
            }
            console.log(userLanguage);
        } catch (error) {
            console.log(error);
            userLanguage = defaultLanguage;
        }

        if (data === 'questionnaire') {
            try {
                await bot.editMessageReplyMarkup({ inline_keyboard: [] }, {
                    chat_id: chatId,
                    message_id: messageId
                });
                await questionnaireForm(msg);
            } catch (error) {
                console.log("QUESTIONNAIRE - " + error);
            }
        } else if (data === 'expert_help') {
            try {
                await bot.editMessageReplyMarkup({ inline_keyboard: [] }, {
                    chat_id: chatId,
                    message_id: messageId
                });
                await startExpertHelp(msg);

            } catch (error) {
                console.log(error);
                await startExpertHelp(msg);
            }
        } else if (data === 'strategies') {
            try {
                await bot.editMessageReplyMarkup({ inline_keyboard: [] }, {
                    chat_id: chatId,
                    message_id: messageId
                });
                investmentStrategies(msg);
            } catch (error) {

            }
        } else if (data === 'rental_strategy') {
            try {
                const opts = {
                    parse_mode: 'HTML',
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: await translateText("–°—Ç—Ä–∞—Ç–µ–≥–∏—è –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–∂–∏", userLanguage), callback_data: "resale_strategy"
                                },
                                {
                                    text: await translateText("–ê—Ä–µ–Ω–¥–∞ —Å –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–∂–µ–π", userLanguage), callback_data: "lease_strategy"
                                }
                            ],
                            [
                                {
                                    text: await translateText("–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", userLanguage), callback_data: "help_again"
                                }
                            ]
                        ]
                    }
                };
                await bot.editMessageReplyMarkup({ inline_keyboard: [] }, {
                    chat_id: chatId,
                    message_id: messageId
                });
                await bot.sendMessage(msg.chat.id, await translateText("<b>1. –°—Ç—Ä–∞—Ç–µ–≥–∏—è –∞—Ä–µ–Ω–¥—ã</b>\n\n" +
                    "<b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> –°—Ç—Ä–∞—Ç–µ–≥–∏—è –∞—Ä–µ–Ω–¥—ã –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç –ø–æ–∫—É–ø–∫—É –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ —Å —Ü–µ–ª—å—é –µ—ë –ø–æ—Å–ª–µ–¥—É—é—â–µ–π —Å–¥–∞—á–∏ –≤ –∞—Ä–µ–Ω–¥—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞. –≠—Ç–æ—Ç –ø–æ–¥—Ö–æ–¥ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –∏—â—É—Ç —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –∏ –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–π –¥–æ—Ö–æ–¥ –æ—Ç —Å–≤–æ–µ–≥–æ –≤–ª–æ–∂–µ–Ω–∏—è.\n\n" +
                    "<b>–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:</b>\n    ‚Ä¢ –†–µ–≥—É–ª—è—Ä–Ω—ã–π –ø–æ—Ç–æ–∫ –¥–æ—Ö–æ–¥–æ–≤ –æ—Ç –∞—Ä–µ–Ω–¥—ã.\n    ‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É–≤–µ–ª–∏—á–µ–Ω–∏—è –∞—Ä–µ–Ω–¥–Ω–æ–π –ø–ª–∞—Ç—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä—ã–Ω–æ—á–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π.\n    ‚Ä¢ –ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –æ—Å—Ç–∞–µ—Ç—Å—è –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏, —á—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø—Ä–∏—Ä–æ—Å—Ç–æ–º –µ—ë —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –≤ –±—É–¥—É—â–µ–º.\n\n" +
                    "<b>–†–∏—Å–∫–∏:</b>\n    ‚Ä¢ –ù–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å—é (–ø–æ–∏—Å–∫ –∞—Ä–µ–Ω–¥–∞—Ç–æ—Ä–æ–≤, —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –∏ —Ä–µ–º–æ–Ω—Ç).\n    ‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø–µ—Ä–∏–æ–¥–æ–≤ –±–µ–∑ –∞—Ä–µ–Ω–¥–∞—Ç–æ—Ä–æ–≤.\n    ‚Ä¢ –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä—ã–Ω–æ—á–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –ø–æ–≤–ª–∏—è—Ç—å –Ω–∞ —É—Ä–æ–≤–µ–Ω—å –∞—Ä–µ–Ω–¥–Ω–æ–π –ø–ª–∞—Ç—ã.\n\n" +
                    "<b>–ü—Ä–∏–º–µ—Ä —Ä–∞—Å—á–µ—Ç–∞:</b>\n    ‚Ä¢ –¶–µ–Ω–∞ –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤: $150,000\n    ‚Ä¢ –î–Ω–µ–≤–Ω–∞—è –∞—Ä–µ–Ω–¥–Ω–∞—è –ø–ª–∞—Ç–∞: $120\n    ‚Ä¢ –°—Ä–µ–¥–Ω—è—è –∑–∞–ø–æ–ª–Ω—è–µ–º–æ—Å—Ç—å: 70% (255 –¥–Ω–µ–π –≤ –≥–æ–¥—É)\n    ‚Ä¢ –ì–æ–¥–æ–≤–æ–π –¥–æ—Ö–æ–¥: 255 –¥–Ω–µ–π * $120 = $30,600\n    ‚Ä¢ –ì–æ–¥–æ–≤—ã–µ —Ä–∞—Å—Ö–æ–¥—ã –Ω–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ (10%): $3,060\n    ‚Ä¢ –ß–∏—Å—Ç—ã–π –≥–æ–¥–æ–≤–æ–π –¥–æ—Ö–æ–¥: $27,540\n    ‚Ä¢ –ì–æ–¥–æ–≤–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å: 18.36%\n\n",
                    userLanguage),
                    opts
                );
            } catch (error) {

            }
        } else if (data === 'resale_strategy') {
            try {
                const opts = {
                    parse_mode: 'HTML',
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: await translateText("–°—Ç—Ä–∞—Ç–µ–≥–∏—è –∞—Ä–µ–Ω–¥—ã", userLanguage), callback_data: "rental_strategy"
                                },
                                {
                                    text: await translateText("–ê—Ä–µ–Ω–¥–∞ —Å –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–∂–µ–π", userLanguage), callback_data: "lease_strategy"
                                }
                            ],
                            [
                                {
                                    text: await translateText("–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", userLanguage), callback_data: "help_again"
                                }
                            ]
                        ]
                    }
                };
                await bot.editMessageReplyMarkup({ inline_keyboard: [] }, {
                    chat_id: chatId,
                    message_id: messageId
                });
                await bot.sendMessage(msg.chat.id, await translateText("<b>2. –°—Ç—Ä–∞—Ç–µ–≥–∏—è –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–∂–∏</b>\n\n" +
                    "<b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> –°—Ç—Ä–∞—Ç–µ–≥–∏—è –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–∂–∏ –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç –ø–æ–∫—É–ø–∫—É –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ —Å —Ü–µ–ª—å—é –µ—ë –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–¥–∞–∂–∏ –ø–æ –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–æ–π —Ü–µ–Ω–µ. –≠—Ç–æ –ø–æ–¥—Ö–æ–¥ –¥–ª—è –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –∏—â—É—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—É—á–µ–Ω–∏—è –µ–¥–∏–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø—Ä–∏–±—ã–ª–∏ –æ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏.\n\n" +
                    "<b>–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:</b>\n    ‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ–≥–æ —É–≤–µ–ª–∏—á–µ–Ω–∏—è –∫–∞–ø–∏—Ç–∞–ª–∞ –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–π –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–∂–µ.\n    ‚Ä¢ –ù–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å—é –≤ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–π –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–µ.\n\n" +
                    "<b>–†–∏—Å–∫–∏:</b>\n    ‚Ä¢ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç —Ä—ã–Ω–æ—á–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π –∏ –∫–æ–ª–µ–±–∞–Ω–∏–π —Ü–µ–Ω –Ω–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å.\n    ‚Ä¢ –†–∞—Å—Ö–æ–¥—ã –Ω–∞ –ø—Ä–æ–¥–∞–∂—É (–∫–æ–º–∏—Å—Å–∏–∏, –Ω–∞–ª–æ–≥–∏ –∏ –¥—Ä—É–≥–∏–µ —Å–±–æ—Ä—ã).\n    ‚Ä¢ –í–æ–∑–º–æ–∂–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–∞—Ç—Ä–∞—Ç—ã –Ω–∞ –ø—Ä–æ–¥–∞–∂—É –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏.\n\n" +
                    "<b>–ü—Ä–∏–º–µ—Ä —Ä–∞—Å—á–µ—Ç–∞:</b>\n    ‚Ä¢ –¶–µ–Ω–∞ –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤: $150,000\n    ‚Ä¢ –û–∂–∏–¥–∞–µ–º–∞—è —Ü–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏ —á–µ—Ä–µ–∑ –≥–æ–¥: $172,000\n    ‚Ä¢ –†–∞—Å—Ö–æ–¥—ã –Ω–∞ –ø—Ä–æ–¥–∞–∂—É (5%): $8,600\n    ‚Ä¢ –ß–∏—Å—Ç—ã–π –¥–æ—Ö–æ–¥ –æ—Ç –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–∂–∏: $13,400\n    ‚Ä¢ –ì–æ–¥–æ–≤–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å: 8.93%\n\n",
                    userLanguage),
                    opts
                );
            } catch (error) {

            }
        } else if (data === 'lease_strategy') {
            try {
                const opts = {
                    parse_mode: 'HTML',
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: await translateText("–°—Ç—Ä–∞—Ç–µ–≥–∏—è –∞—Ä–µ–Ω–¥—ã", userLanguage), callback_data: "rental_strategy"
                                },
                                {
                                    text: await translateText("–°—Ç—Ä–∞—Ç–µ–≥–∏—è –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–∂–∏", userLanguage), callback_data: "resale_strategy"
                                }
                            ],
                            [
                                {
                                    text: await translateText("–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", userLanguage), callback_data: "help_again"
                                }
                            ]
                        ]
                    }
                };
                await bot.editMessageReplyMarkup({ inline_keyboard: [] }, {
                    chat_id: chatId,
                    message_id: messageId
                });
                await bot.sendMessage(msg.chat.id, await translateText("<b>3. –ê—Ä–µ–Ω–¥–∞ —Å –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–∂–µ–π</b>\n\n" +
                    "<b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –≤–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è —Å–¥–∞—á—É –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –≤ –∞—Ä–µ–Ω–¥—É –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥ —Å –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–¥–∞–∂–µ–π. –≠—Ç–æ—Ç –ø–æ–¥—Ö–æ–¥ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏–Ω–≤–µ—Å—Ç–æ—Ä—É –ø–æ–ª—É—á–∞—Ç—å —Ç–µ–∫—É—â–∏–π –¥–æ—Ö–æ–¥ –æ—Ç –∞—Ä–µ–Ω–¥—ã, –∞ –∑–∞—Ç–µ–º –∏–∑–≤–ª–µ—á—å –ø—Ä–∏–±—ã–ª—å –æ—Ç –ø—Ä–∏—Ä–æ—Å—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏.\n\n" +
                    "<b>–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:</b>\n    ‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—É—á–µ–Ω–∏—è –¥–≤–æ–π–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞: —Ç–µ–∫—É—â–µ–≥–æ –æ—Ç –∞—Ä–µ–Ω–¥—ã –∏ –∫–∞–ø–∏—Ç–∞–ª—å–Ω–æ–≥–æ –æ—Ç –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–∂–∏.\n    ‚Ä¢ –ë–æ–ª–µ–µ –≤—ã—Å–æ–∫–∞—è —Å–æ–≤–æ–∫—É–ø–Ω–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å.\n\n" +
                    "<b>–†–∏—Å–∫–∏:</b>\n    ‚Ä¢ –ù–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å—é –Ω–∞ —ç—Ç–∞–ø–µ –∞—Ä–µ–Ω–¥—ã.\n    ‚Ä¢ –í–æ–∑–º–æ–∂–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä—ã–Ω–æ—á–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –ø–æ–≤–ª–∏—è—Ç—å –∫–∞–∫ –Ω–∞ –∞—Ä–µ–Ω–¥–Ω—É—é –ø–ª–∞—Ç—É, —Ç–∞–∫ –∏ –Ω–∞ —Ü–µ–Ω—É –ø—Ä–æ–¥–∞–∂–∏.\n    ‚Ä¢ –†–∞—Å—Ö–æ–¥—ã –Ω–∞ –ø—Ä–æ–¥–∞–∂—É (–∫–æ–º–∏—Å—Å–∏–∏, –Ω–∞–ª–æ–≥–∏ –∏ –¥—Ä—É–≥–∏–µ —Å–±–æ—Ä—ã).\n\n" +
                    "<b>–ü—Ä–∏–º–µ—Ä —Ä–∞—Å—á–µ—Ç–∞:</b>\n    ‚Ä¢ –¶–µ–Ω–∞ –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤: $150,000\n    ‚Ä¢ –î–Ω–µ–≤–Ω–∞—è –∞—Ä–µ–Ω–¥–Ω–∞—è –ø–ª–∞—Ç–∞: $120\n    ‚Ä¢ –°—Ä–µ–¥–Ω—è—è –∑–∞–ø–æ–ª–Ω—è–µ–º–æ—Å—Ç—å: 70% (255 –¥–Ω–µ–π –≤ –≥–æ–¥—É)\n    ‚Ä¢ –ì–æ–¥–æ–≤–æ–π –¥–æ—Ö–æ–¥ –æ—Ç –∞—Ä–µ–Ω–¥—ã: $27,540\n    ‚Ä¢ –û–∂–∏–¥–∞–µ–º–∞—è —Ü–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏ —á–µ—Ä–µ–∑ –≥–æ–¥: $172,000\n    ‚Ä¢ –†–∞—Å—Ö–æ–¥—ã –Ω–∞ –ø—Ä–æ–¥–∞–∂—É (5%): $8,600\n    ‚Ä¢ –ß–∏—Å—Ç—ã–π –¥–æ—Ö–æ–¥ –æ—Ç –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–∂–∏: $13,400\n    ‚Ä¢ –°–æ–≤–æ–∫—É–ø–Ω—ã–π –≥–æ–¥–æ–≤–æ–π –¥–æ—Ö–æ–¥: $40,940\n    ‚Ä¢ –°–æ–≤–æ–∫—É–ø–Ω–∞—è –≥–æ–¥–æ–≤–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å: 27.29%\n\n",
                    userLanguage),
                    opts
                );
            } catch (error) {
                console.log(error);
            }
        } else if (data === "help_again") {

            const opts = {
                reply_markup: {
                    inline_keyboard: [
                        [
                            {
                                text: await translateText("–ê–Ω–∫–µ—Ç–∞", userLanguage), callback_data: "questionnaire"
                            }
                        ],
                        [
                            {
                                text: await translateText("–≠–∫—Å–ø–µ—Ä—Ç–Ω–∞—è –ø–æ–º–æ—â—å —Å –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å—é", userLanguage), callback_data: "expert_help"
                            }
                        ],
                        [
                            {
                                text: await translateText("–û –Ω–∞—Å", userLanguage), url: 'https://t.me'
                            }
                        ],
                        [
                            {
                                text: await translateText("–°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è", userLanguage), callback_data: "strategies"
                            }
                        ]
                    ]
                }
            };
            await bot.editMessageReplyMarkup({ inline_keyboard: [] }, {
                chat_id: chatId,
                message_id: messageId
            });
            await bot.sendMessage(msg.chat.id, await translateText(
                "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Å –≤ –ê–ù ‚ÄúCondor Real Estates‚Äù!\n\n" +
                "–ú—ã —Ä–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å –≤ –Ω–∞—à–µ–º Telegram-–±–æ—Ç–µ! –ù–∞—à–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –Ω–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –Ω–∞ –ë–∞–ª–∏, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—è –≤–∞–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –≤—ã–≥–æ–¥–Ω—ã—Ö –≤–ª–æ–∂–µ–Ω–∏–π –≤ –æ–¥–∏–Ω –∏–∑ —Å–∞–º—ã—Ö –∂–∏–≤–æ–ø–∏—Å–Ω—ã—Ö —É–≥–æ–ª–∫–æ–≤ –º–∏—Ä–∞.\n\n" +
                "–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —à–∏—Ä–æ–∫–∏–π —Å–ø–µ–∫—Ç—Ä —É—Å–ª—É–≥, –≤–∫–ª—é—á–∞—è –ø–æ–∫—É–ø–∫—É, –ø—Ä–æ–¥–∞–∂—É –∏ –∞—Ä–µ–Ω–¥—É –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏, –∞ —Ç–∞–∫–∂–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è–º –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –æ–±—ä–µ–∫—Ç–∞–º–∏. –ù–∞—à–∏ —ç–∫—Å–ø–µ—Ä—Ç—ã –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å –≤–∞–º –Ω–∞–π—Ç–∏ –Ω–∞–∏–ª—É—á—à–∏–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –≤–∞—à–∏—Ö —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ü–µ–ª–µ–π.\n\n" +
                "–° —á–µ–≥–æ –≤–∞–º –Ω–∞—á–∞—Ç—å ‚ÅâÔ∏è\n" +
                "‚û°Ô∏è–ü—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å, —á—Ç–æ–±—ã –º—ã —Å–º–æ–≥–ª–∏ –ø–æ–¥–æ–±—Ä–∞—Ç—å –≤–∞–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –ø–æ–¥ –≤–∞—à –∑–∞–ø—Ä–æ—Å –∏ –≤—ã –Ω–∞–≥–ª—è–¥–Ω–æ —É–≤–∏–¥–µ–ª–∏, —á—Ç–æ –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –Ω–∞ –≤–∞—à –±—é–¥–∂–µ—Ç.\n‚û°Ô∏è–°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–∞—à–∏–º–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏, –ø–æ–ª—É—á–∞–π—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–æ–≤—ã—Ö –æ–±—ä–µ–∫—Ç–∞—Ö –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö, –∞ —Ç–∞–∫–∂–µ –∑–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã ‚Äî –º—ã –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏ –∏ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å!\n\n" +
                "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—Å. –î–∞–≤–∞–π—Ç–µ –≤–º–µ—Å—Ç–µ —Å–æ–∑–¥–∞–¥–∏–º –í–∞—à–µ —É—Å–ø–µ—à–Ω–æ–µ –±—É–¥—É—â–µ–µ –Ω–∞ –ë–∞–ª–∏!\n\n" +
                "‚¨áÔ∏è–°–¥–µ–ª–∞–π—Ç–µ —Å–≤–æ–π –≤—ã–±–æ—Ä‚¨áÔ∏è",
                userLanguage
            ), opts);
        }

        saveData('userInfo', userInfo);
        saveData('expertHelpInfo', expertHelpInfo);
        saveData('userStates', userStates);
        saveData('questionnaireAnswer', questionnaireAnswer);

    } catch (error) {
        console.log("SOME ERROR HERE - " + error);
    }
});

const getUserLanguage = (msg) => {
    const languageCode = msg.from.language_code;
    return languageCode === 'uk' ? 'ru' : languageCode || 'ru';
};

async function translateText(clientText, targetLanguage) {
    try {
        if (targetLanguage === 'ru') return clientText;
        const res = await translate(clientText, { from: 'ru', to: targetLanguage });
        return res.text || clientText;
    } catch (err) {
        console.error('Translation error:', err);
        return clientText;
    }
}

async function restoreUserState(bot, userInfo, chatId) {
    if (!userInfo[chatId] || !userInfo[chatId].state) {
        return;
    }

    const userState = userInfo[chatId].state;

    try {
        switch (userState) {
            case 'questionnaire':
                await bot.sendMessage(chatId, await translateText("–ü—Ä–∏–Ω–æ—Å–∏–º —Å–≤–æ–∏ –∏–∑–≤–∏–Ω–µ–Ω–∏—è, –±–æ—Ç —Å–Ω–æ–≤–∞ –æ–Ω–ª–∞–π–Ω, –ø—Ä–æ–π–¥–∏—Ç–µ —Ñ–æ—Ä–º—É –¥–∞–ª—å—à–µ —Å —Ç–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞, –≥–¥–µ –í—ã –µ–µ –∑–∞–∫–æ–Ω—á–∏–ª–∏, –∏–ª–∏ –Ω–∞—á–Ω–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞", userInfo[chatId].language),
                    {
                        reply_markup: {
                            inline_keyboard: [
                                [{ text: await translateText("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã", userInfo[chatId].language), callback_data: "questionnaire" }],
                                [{ text: await translateText("–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", userInfo[chatId].language), callback_data: "help_again" }]
                            ]
                        }
                    }
                );
                break;
            case 'investment_strategies_start':
                await bot.sendMessage(chatId, await translateText("–ü—Ä–∏–Ω–æ—Å–∏–º —Å–≤–æ–∏ –∏–∑–≤–∏–Ω–µ–Ω–∏—è, –±–æ—Ç —Å–Ω–æ–≤–∞ –æ–Ω–ª–∞–π–Ω, –µ—Å–ª–∏ –≤—ã –∂–µ–ª–∞–µ—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–µ–≥–∏–∏ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, –∏–ª–∏ –Ω–∞—á–Ω–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞", userInfo[chatId].language),
                    {
                        reply_markup: {
                            inline_keyboard: [
                                [{ text: await translateText("–°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è", userInfo[chatId].language), callback_data: "strategies" }],
                                [{ text: await translateText("–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", userInfo[chatId].language), callback_data: "help_again" }]
                            ]
                        }
                    }
                );
                break;
            case 'awaiting_fio':
            case 'awaiting_phone':
            case 'awaiting_email':
                await bot.sendMessage(chatId, await translateText("–ü—Ä–∏–Ω–æ—Å–∏–º —Å–≤–æ–∏ –∏–∑–≤–∏–Ω–µ–Ω–∏—è, –±–æ—Ç —Å–Ω–æ–≤–∞ –æ–Ω–ª–∞–π–Ω, –ø—Ä–æ–π–¥–∏—Ç–µ —Ñ–æ—Ä–º—É –∑–∞–Ω–æ–≤–æ –µ—â–µ —Ä–∞–∑ –Ω–∞–∂–∞–≤ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É, –∏–ª–∏ –Ω–∞—á–Ω–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞", userInfo[chatId].language),
                    {
                        reply_markup: {
                            inline_keyboard: [
                                [{ text: await translateText("–≠–∫—Å–ø–µ—Ä—Ç–Ω–∞—è –ø–æ–º–æ—â—å —Å –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å—é", userInfo[chatId].language), callback_data: "expert_help" }],
                                [{ text: await translateText("–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", userInfo[chatId].language), callback_data: "help_again" }]
                            ]
                        }
                    }
                );
                break;
            case 'start':
                userInfo = loadData('userInfo');
                expertHelpInfo = loadData('expertHelpInfo');
                userStates = loadData('userStates');
                questionnaireAnswer = loadData('questionnaireAnswer');
                const userLanguage = userInfo[chatId].language;
                console.log(userInfo);
                console.log(userLanguage);
                userInfo[chatId] = {
                    language: userLanguage,
                    state: 'start'
                };

                saveData('userInfo', userInfo);

                const opts = {
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: await translateText("–ê–Ω–∫–µ—Ç–∞", userLanguage), callback_data: "questionnaire"
                                }
                            ],
                            [
                                {
                                    text: await translateText("–≠–∫—Å–ø–µ—Ä—Ç–Ω–∞—è –ø–æ–º–æ—â—å —Å –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å—é", userLanguage), callback_data: "expert_help"
                                }
                            ],
                            [
                                {
                                    text: await translateText("–û –Ω–∞—Å", userLanguage), url: 'https://t.me'
                                }
                            ],
                            [
                                {
                                    text: await translateText("–°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è", userLanguage), callback_data: "strategies"
                                }
                            ]
                        ]
                    }
                };

                await bot.sendMessage(chatId, await translateText(
                    "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Å –≤ –ê–ù ‚ÄúCondor Real Estates‚Äù!\n\n" +
                    "–ú—ã —Ä–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å –≤ –Ω–∞—à–µ–º Telegram-–±–æ—Ç–µ! –ù–∞—à–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –Ω–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –Ω–∞ –ë–∞–ª–∏, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—è –≤–∞–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –≤—ã–≥–æ–¥–Ω—ã—Ö –≤–ª–æ–∂–µ–Ω–∏–π –≤ –æ–¥–∏–Ω –∏–∑ —Å–∞–º—ã—Ö –∂–∏–≤–æ–ø–∏—Å–Ω—ã—Ö —É–≥–æ–ª–∫–æ–≤ –º–∏—Ä–∞.\n\n" +
                    "–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —à–∏—Ä–æ–∫–∏–π —Å–ø–µ–∫—Ç—Ä —É—Å–ª—É–≥, –≤–∫–ª—é—á–∞—è –ø–æ–∫—É–ø–∫—É, –ø—Ä–æ–¥–∞–∂—É –∏ –∞—Ä–µ–Ω–¥—É –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏, –∞ —Ç–∞–∫–∂–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è–º –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –æ–±—ä–µ–∫—Ç–∞–º–∏. –ù–∞—à–∏ —ç–∫—Å–ø–µ—Ä—Ç—ã –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å –≤–∞–º –Ω–∞–π—Ç–∏ –Ω–∞–∏–ª—É—á—à–∏–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –≤–∞—à–∏—Ö —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ü–µ–ª–µ–π.\n\n" +
                    "–° —á–µ–≥–æ –≤–∞–º –Ω–∞—á–∞—Ç—å ‚ÅâÔ∏è\n" +
                    "‚û°Ô∏è–ü—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å, —á—Ç–æ–±—ã –º—ã —Å–º–æ–≥–ª–∏ –ø–æ–¥–æ–±—Ä–∞—Ç—å –≤–∞–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –ø–æ–¥ –≤–∞—à –∑–∞–ø—Ä–æ—Å –∏ –≤—ã –Ω–∞–≥–ª—è–¥–Ω–æ —É–≤–∏–¥–µ–ª–∏, —á—Ç–æ –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –Ω–∞ –≤–∞—à –±—é–¥–∂–µ—Ç.\n‚û°Ô∏è–°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–∞—à–∏–º–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏, –ø–æ–ª—É—á–∞–π—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–æ–≤—ã—Ö –æ–±—ä–µ–∫—Ç–∞—Ö –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö, –∞ —Ç–∞–∫–∂–µ –∑–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã ‚Äî –º—ã –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏ –∏ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å!\n\n" +
                    "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—Å. –î–∞–≤–∞–π—Ç–µ –≤–º–µ—Å—Ç–µ —Å–æ–∑–¥–∞–¥–∏–º –í–∞—à–µ —É—Å–ø–µ—à–Ω–æ–µ –±—É–¥—É—â–µ–µ –Ω–∞ –ë–∞–ª–∏!\n\n" +
                    "‚¨áÔ∏è–°–¥–µ–ª–∞–π—Ç–µ —Å–≤–æ–π –≤—ã–±–æ—Ä‚¨áÔ∏è",
                    userLanguage
                ), opts);
                break;
            default:
                console.log(`–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è chatId ${chatId}: ${userState}`);
        }
    } catch (error) {
        console.log(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${chatId}: ${error.message}`);
    }
}